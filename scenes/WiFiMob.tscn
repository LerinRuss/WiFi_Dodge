[gd_scene load_steps=4 format=3 uid="uid://d26s654ewc36r"]

[ext_resource type="PackedScene" uid="uid://c00fpinqf1jyd" path="res://units/fish/fish.tscn" id="1_d3xgo"]

[sub_resource type="GDScript" id="GDScript_y53jb"]
resource_name = "ServerSynchronizedMob"
script/source = "extends Node

signal screen_exited

var speed: float:
	set(_speed):
		$Fish.speed = _speed
	get:
		return $Fish.speed
var position: Vector2:
	set(pos):
		$Fish.position = pos
	get:
		return $Fish.position
var vector_step: Vector2:
	set(step):
		$Fish.vector_step = step
	get:
		return $Fish.vector_step

# Called when the node enters the scene tree for the first time.
func _ready():
	pass


# Called every frame. 'delta' is the elapsed time since the previous frame.
func _process(delta):
	pass


func _on_fish_screen_exited():
	self.screen_exited.emit()
"

[sub_resource type="SceneReplicationConfig" id="SceneReplicationConfig_vtb6v"]
properties/0/path = NodePath("Fish:position")
properties/0/spawn = true
properties/0/replication_mode = 1
properties/1/path = NodePath("Fish:visible")
properties/1/spawn = true
properties/1/replication_mode = 1
properties/2/path = NodePath("Fish:rotation")
properties/2/spawn = true
properties/2/replication_mode = 1
properties/3/path = NodePath("Fish:linear_velocity")
properties/3/spawn = true
properties/3/replication_mode = 1

[node name="WiFiMob" type="Node"]
script = SubResource("GDScript_y53jb")

[node name="Fish" parent="." instance=ExtResource("1_d3xgo")]
position = Vector2(-136, -98)
gravity_scale = 0.0
metadata/_edit_group_ = true

[node name="MultiplayerSynchronizer" type="MultiplayerSynchronizer" parent="."]
replication_config = SubResource("SceneReplicationConfig_vtb6v")

[connection signal="screen_exited" from="Fish" to="." method="_on_fish_screen_exited"]
